name: CD Seletivo para Micro-Frontends (Super App)

on:
  push:
    branches:
      - main
  # Este workflow tamb√©m pode rodar em Pull Requests para fins de CI,
  # mas o deploy s√≥ ocorrer√° em 'push' para a main (ver condi√ß√µes 'if').
  pull_request:
    branches:
      - main

jobs:
  # 1. Job para Detectar Mudan√ßas
  # Ele verifica quais pastas foram alteradas e armazena o resultado.
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      app_host: ${{ steps.filter.outputs.app_host }}
      app_reserva: ${{ steps.filter.outputs.app_reserva }}
    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Necess√°rio para a action de filtro funcionar corretamente

      - name: üîé Verificar Arquivos Alterados
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app_host:
              - 'apps/host/**'    # Acionado se algo mudar no c√≥digo do Host
              - 'packages/core/**'  # Exemplo: se houver mudan√ßa em libs comuns
            app_reserva:
              - 'apps/reserva/**' # Acionado se algo mudar no m√≥dulo Reserva
              - 'packages/core/**'

  # 2. Job de Deploy para o M√≥dulo HOST
  deploy_host:
    # ‚ö†Ô∏è Esta condi√ß√£o de 'if' garante que o job S√ì roda se:
    # 1. O m√≥dulo 'host' foi alterado (detectado acima) E
    # 2. O evento foi um 'push' (n√£o um Pull Request) E
    # 3. O job anterior passou.
    if: needs.detect_changes.outputs.app_host == 'true' && github.event_name == 'push' && success()
    needs: detect_changes
    runs-on: ubuntu-latest
    environment: production_host # ‚ö†Ô∏è Defina este ambiente nas Configura√ß√µes do GitHub

    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4
        
      - name: ‚öôÔ∏è Configurar Node.js e Depend√™ncias
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ‚¨áÔ∏è Instalar Depend√™ncias e Fazer Build do Host
        # Use 'npm run build' ou o comando espec√≠fico do seu monorepo (e.g., Lerna, Nx)
        run: |
          npm install
          # Ajuste este comando para o seu build:
          npm run build:host # Exemplo de script que faz o build do app/host
        
      - name: üöÄ Passo de Implanta√ß√£o Real do Host (ADAPTE AQUI!)
        # SUBSTITUA ESTE RUN PELO SEU C√ìDIGO DE DEPLOY.
        # Exemplo com Vercel/Firebase/AWS/Azure:
        run: |
          echo "Iniciando deploy do Host App..."
          # Ex: vercel deploy --prebuilt --prod
          # Ex: firebase deploy --only hosting:host-app
          # Ex: aws s3 sync ./dist/host-app s3://host-bucket/
          echo "Deploy do Host App conclu√≠do!"


  # 3. Job de Deploy para o M√≥dulo RESERVA
  deploy_reserva:
    # ‚ö†Ô∏è Condi√ß√£o de 'if' para rodar S√ì se o m√≥dulo 'reserva' foi alterado
    if: needs.detect_changes.outputs.app_reserva == 'true' && github.event_name == 'push' && success()
    needs: detect_changes
    runs-on: ubuntu-latest
    environment: production_reserva # ‚ö†Ô∏è Defina este ambiente nas Configura√ß√µes do GitHub

    steps:
      - name: Checkout do C√≥digo
        uses: actions/checkout@v4
        
      - name: ‚öôÔ∏è Configurar Node.js e Depend√™ncias
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ‚¨áÔ∏è Instalar Depend√™ncias e Fazer Build do Reserva
        run: |
          npm install
          # Ajuste este comando para o seu build:
          npm run build:reserva # Exemplo de script que faz o build do app/reserva
        
      - name: üöÄ Passo de Implanta√ß√£o Real do Reserva (ADAPTE AQUI!)
        # SUBSTITUA ESTE RUN PELO SEU C√ìDIGO DE DEPLOY.
        run: |
          echo "Iniciando deploy do M√≥dulo Reserva..."
          # Ex: aws s3 sync ./dist/reserva-app s3://reserva-bucket/
          echo "Deploy do M√≥dulo Reserva conclu√≠do!"
