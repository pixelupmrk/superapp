name: CI/CD Super App - Deploy Seletivo Final

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  # 1. Job para Detecção de Mudanças (Verifica o que foi alterado)
  detect_changes:
    runs-on: ubuntu-latest
    outputs:
      app_host: ${{ steps.filter.outputs.app_host }}
      app_reserva: ${{ steps.filter.outputs.app_reserva }}
    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔎 Verificar Arquivos Alterados
        uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            app_host:
              - 'apps/host/**'          # Pasta do Host App
              - 'packages/shared/**'    # Se usa código compartilhado
            app_reserva:
              - 'apps/reserva/**'       # Pasta do Módulo Reserva
              - 'packages/shared/**'

  # 2. Job de Deploy para o Módulo HOST (Nome Seguro)
  deploy_host:
    # Só roda se o Host foi alterado E for um push para main
    if: needs.detect_changes.outputs.app_host == 'true' && github.event_name == 'push' && success()
    needs: detect_changes
    runs-on: ubuntu-latest
    environment: Production-Host # Nome comum de Ambiente

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
        
      - name: ⚙️ Configurar Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ⬇️ Instalar Dependências e Fazer Build do Host
        run: |
          npm install
          npm run build:host # O script de build do Host
        
      - name: 🚀 Deploy Exemplo: AWS S3
        uses: aws-actions/configure-aws-credentials@v4
        with:
          # Credenciais Salvas como Secrets no GitHub
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1 

      - name: 🌐 Sincronizar Arquivos com S3
        # Assume que o build está em './dist/host' e o bucket chama 'super-app-host'
        run: aws s3 sync ./dist/host s3://super-app-host-bucket/ --delete

  # 3. Job de Deploy para o Módulo RESERVA (Nome Seguro)
  deploy_reserva:
    # Só roda se o Reserva foi alterado E for um push para main
    if: needs.detect_changes.outputs.app_reserva == 'true' && github.event_name == 'push' && success()
    needs: detect_changes
    runs-on: ubuntu-latest
    environment: Production-Reserva # Nome comum de Ambiente

    steps:
      - name: Checkout do Código
        uses: actions/checkout@v4
        
      - name: ⚙️ Configurar Node.js (v20)
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: ⬇️ Instalar Dependências e Fazer Build do Reserva
        run: |
          npm install
          npm run build:reserva # O script de build do Reserva

      - name: 🚀 Deploy Exemplo: Vercel
        uses: amondnet/vercel-action@v20
        with:
          # Credenciais Salvas como Secrets no GitHub
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID_RESERVA }}
          vercel-project-name: super-app-reserva
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-args: '--prod'
